% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{leftOuterJoin}
\alias{leftOuterJoin}
\alias{leftOuterJoin,RDD,RDD,integer-method}
\alias{leftOuterJoin,RDD,RDD-method}
\title{Left outer join two RDDs}
\usage{
leftOuterJoin(rdd1, rdd2, numPartitions)

\S4method{leftOuterJoin}{RDD,RDD,integer}(rdd1, rdd2, numPartitions)
}
\arguments{
\item{rdd1}{An RDD.}

\item{rdd2}{An RDD.}

\item{numPartitions}{Number of partitions to create.}
}
\value{
For each element (k, v) in rdd1, the resulting RDD will either contain
        all pairs (k, (v, w)) for (k, w) in rdd2, or the pair (k, (v, NULL))
        if no elements in rdd2 have key k.
}
\description{
Left outer join two RDDs
}
\examples{
\dontrun{
sc <- sparkR.init()
rdd1 <- parallelize(sc, list(list(1, 1), list(2, 4)))
rdd2 <- parallelize(sc, list(list(1, 2), list(1, 3)))
leftOuterJoin(rdd1, rdd2, 2L) # list(list(1, list(1, 2)), list(1, list(1, 3)), list(2, list(4, NULL)))
}
}

